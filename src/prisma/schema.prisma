// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String      @id @default(cuid())
  name      String
  email     String      @unique
  password  String?
  image     String?
  provider  Provider
  role      Role        @default(User)
  posts     Post[]
  comments  Comment[]
  likes     PostLike[]
  Reply     Reply[]
  ReplyLike ReplyLike[]
  issuses   Issue[]
  createdAt DateTime    @default(now())
  Event     Event[]
}

model VerifyUser {
  id        String   @id @default(cuid())
  name      String
  email     String
  password  String
  otp       Int
  expiresAt DateTime
  createdAt DateTime @default(now())
}

model Post {
  id        String     @id @default(cuid())
  caption   String
  postImage String
  user      User       @relation(fields: [userId], references: [id])
  userId    String
  comments  Comment[]
  likes     PostLike[]
  createdAt DateTime   @default(now())
}

model PostLike {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  post      Post     @relation(fields: [postId], references: [id])
  postId    String
  createdAt DateTime @default(now())
}

model Comment {
  id        String   @id @default(cuid())
  message   String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  post      Post     @relation(fields: [postId], references: [id])
  postId    String
  replies   Reply[]
  createdAt DateTime @default(now())
}

model Reply {
  id        String   @id @default(cuid())
  message   String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  comment   Comment  @relation(fields: [commentId], references: [id])
  commentId String
  createdAt DateTime @default(now())
}

model ReplyLike {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  createdAt DateTime @default(now())
}

model Issue {
  id          String   @id @default(cuid())
  title       String
  description String
  location    String
  contact     BigInt
  issueImage  String?
  user        User     @relation(fields: [userId], references: [id])
  userId      String
  createdAt   DateTime @default(now())
}

model Event {
  id          String   @id @default(cuid())
  title       String
  description String
  location    String
  eventImage  String?
  user        User     @relation(fields: [userId], references: [id])
  userId      String
  expiresAt   DateTime
  createdAt   DateTime @default(now())
}

enum Provider {
  Credentials
  Google
}

enum Role {
  User
  Organization
}
